
#include <avr/pgmspace.h>  // Needed to store stuff in Flash using PROGMEM
#include "FastLED.h"       // Fastled library to control the LEDs

// How many leds are connected?
#define NUM_LEDS 20

// Define the Data Pin
#define DATA_PIN 5  // Connected to the data pin of the first LED strip

// Define the array of leds
CRGB leds[NUM_LEDS];

// Create the array of retro arcade characters and store it in Flash memory
const long Bulbasaur[] PROGMEM =
{
  0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x336633, 0x006633, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
  0x000000, 0x000000, 0x000000, 0x000000, 0x336633, 0x00cc33, 0x33cc33, 0x336633, 0x000000, 0x000000, 0x000000, 0x000000, 
  0x000000, 0x000000, 0x000000, 0x336633, 0x00cc33, 0x336633, 0x336633, 0x00cc33, 0x336633, 0x000000, 0x000000, 0x000000, 
  0x000000, 0x000000, 0x336633, 0x00cc33, 0x33cc33, 0x00cc66, 0x00cc33, 0x33cc66, 0x00cc33, 0x336633, 0x000000, 0x000000, 
  0x000000, 0x336633, 0x00cc33, 0x336666, 0x00cc66, 0x339933, 0x33cc33, 0x00cc33, 0x336666, 0x00cc33, 0x336633, 0x000000, 
  0x000000, 0x336633, 0x336666, 0x66ffcc, 0x336666, 0x336666, 0x336666, 0x336666, 0x66ffcc, 0x336666, 0x336633, 0x000000,  
  0x000000, 0x336633, 0x336666, 0x33ffcc, 0x33ff99, 0x336666, 0x336666, 0x66ffcc, 0x33ff99, 0x336666, 0x006633, 0x000000, 
  0x000000, 0x006633, 0x336666, 0xffffff, 0xcc0000, 0x33ffcc, 0x339966, 0xcc0000, 0xffffff, 0x336666, 0x336633, 0x000000,  
  0x000000, 0x000000, 0x336666, 0x66ff99, 0x33ffcc, 0x66ffcc, 0x33cccc, 0x33ffcc, 0x66ffcc, 0x336666, 0x000000, 0x000000, 
  0x000000, 0x336666, 0x33ffcc, 0x336666, 0x336666, 0x336633, 0x336666, 0x336633, 0x336666, 0x33ffcc, 0x336666, 0x000000, 
  0x000000, 0x336666, 0x336666, 0x66ff99, 0x336666, 0x336666, 0x336666, 0x336666, 0x66ff99, 0x336666, 0x336666, 0x000000, 
  0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000
};

const long Bulbasaur2[] PROGMEM =
{ 

  0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x663300, 0x663300, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
  0x000000, 0x000000, 0x000000, 0x000000, 0x663300, 0xff9933, 0xff9933, 0x663300, 0x000000, 0x000000, 0x000000, 0x000000, 
  0x000000, 0x000000, 0x000000, 0x663300, 0xff9933, 0xff9933, 0xff9933, 0xff9933, 0x663300, 0x000000, 0xff9900, 0x000000, 
  0xff9900, 0xff9900, 0x000000, 0x663300, 0xffffff, 0xff9933, 0xff9933, 0xffffff, 0x663300, 0x000000, 0x000000, 0x000000, 
  0x000000, 0x000000, 0x000000, 0x663300, 0x0066cc, 0xff9933, 0xff9933, 0x0066ff, 0x663300, 0xff9900, 0xffcc33, 0xff9900, 
  0x000000, 0x663300, 0x663300, 0x663300, 0xff9933, 0xff9933, 0xff9933, 0xff9933, 0x663300, 0x000000, 0x000000, 0x000000, 
  0x000000, 0x000000, 0x000000, 0x663300, 0x663300, 0x663300, 0x663300, 0x663300, 0x663300, 0xff9933, 0x663300, 0x000000, 
  0x000000, 0x000000, 0x663300, 0xff9933, 0x663300, 0xffcc66, 0xffcc66, 0x663300, 0xff9933, 0x663300, 0x000000, 0x000000, 
  0x000000, 0x000000, 0x663300, 0xff9933, 0x663300, 0xffcc66, 0xffcc66, 0x663300, 0xff9933, 0x663300, 0x000000, 0x000000, 
  0x000000, 0x000000, 0x000000, 0x663300, 0x663300, 0xffcc66, 0xffcc66, 0x663300, 0x663300, 0x000000, 0x000000, 0x000000, 
  0x000000, 0x000000, 0x000000, 0x663300, 0xff9933, 0x663300, 0x663300, 0xff9933, 0x663300, 0x000000, 0x000000, 0x000000, 
  0x000000, 0x000000, 0x000000, 0x663300, 0x663300, 0xffcc66, 0xffcc66, 0x663300, 0x663300, 0x000000, 0x000000, 0x000000, 
};

const long Charmander[] PROGMEM =
{ 

  0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x663300, 0x663300, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
  0x000000, 0x000000, 0x000000, 0x000000, 0x663300, 0xff9933, 0xff9933, 0x663300, 0x000000, 0x000000, 0x000000, 0x000000, 
  0x000000, 0x000000, 0x000000, 0x663300, 0xff9933, 0xff9933, 0xff9933, 0xff9933, 0x663300, 0x000000, 0xff9900, 0x000000, 
  0xff9900, 0xff9900, 0x000000, 0x663300, 0xffffff, 0xff9933, 0xff9933, 0xffffff, 0x663300, 0x000000, 0x000000, 0x000000, 
  0x000000, 0x000000, 0x000000, 0x663300, 0x0066cc, 0xff9933, 0xff9933, 0x0066ff, 0x663300, 0xff9900, 0xffcc33, 0xff9900, 
  0x000000, 0x663300, 0x663300, 0x663300, 0xff9933, 0xff9933, 0xff9933, 0xff9933, 0x663300, 0x000000, 0x000000, 0x000000, 
  0x000000, 0x000000, 0x000000, 0x663300, 0x663300, 0x663300, 0x663300, 0x663300, 0x663300, 0xff9933, 0x663300, 0x000000, 
  0x000000, 0x000000, 0x663300, 0xff9933, 0x663300, 0xffcc66, 0xffcc66, 0x663300, 0xff9933, 0x663300, 0x000000, 0x000000, 
  0x000000, 0x000000, 0x663300, 0xff9933, 0x663300, 0xffcc66, 0xffcc66, 0x663300, 0xff9933, 0x663300, 0x000000, 0x000000, 
  0x000000, 0x000000, 0x000000, 0x663300, 0x663300, 0xffcc66, 0xffcc66, 0x663300, 0x663300, 0x000000, 0x000000, 0x000000, 
  0x000000, 0x000000, 0x000000, 0x663300, 0xff9933, 0x663300, 0x663300, 0xff9933, 0x663300, 0x000000, 0x000000, 0x000000, 
  0x000000, 0x000000, 0x000000, 0x663300, 0x663300, 0xffcc66, 0xffcc66, 0x663300, 0x663300, 0x000000, 0x000000, 0x000000, 
};

void setup() { 
FastLED.addLeds<NEOPIXEL,DATA_PIN>(leds, NUM_LEDS);  // Init of the Fastled library
FastLED.setBrightness(15);
};

void loop() { 

for(int passtime = 0; passtime < 8; passtime++) { // Display it 8 times

// Set the frame to Bulbasaur
FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) {
    leds[i] = pgm_read_dword(&(Bulbasaur[i]));  // Read array from Flash
  }

FastLED.show();
delay(500);

// Set the frame to bulbasaur2
FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) {
    leds[i] = pgm_read_dword(&(Bulbasaur2[i]));
  }

FastLED.show();
delay(500);

}
} 
